version: '3.9'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_FIREBASE_API_KEY=${REACT_APP_FIREBASE_API_KEY}
        - REACT_APP_FIREBASE_AUTH_DOMAIN=${REACT_APP_FIREBASE_AUTH_DOMAIN}
        - REACT_APP_FIREBASE_PROJECT_ID=${REACT_APP_FIREBASE_PROJECT_ID}
        - REACT_APP_FIREBASE_STORAGE_BUCKET=${REACT_APP_FIREBASE_STORAGE_BUCKET}
        - REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${REACT_APP_FIREBASE_MESSAGING_SENDER_ID}
        - REACT_APP_FIREBASE_APP_ID=${REACT_APP_FIREBASE_APP_ID}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    env_file:
      - ./frontend/.env  # Use frontend's env file
    environment:
      - REACT_APP_BACKEND_URL=http://backend:5000
    depends_on:
      - backend
  
  data-loader:
    image: alpine:3.14
    volumes:
      - ./backend/data:/source_data
      - data-volume:/destination_data
    command: >
      sh -c "
        if [ ! -f /destination_data/.initialized ]; then
          echo 'Copying data files...' &&
          cp /source_data/*.csv /destination_data/ &&
          touch /destination_data/.initialized &&
          echo 'Data initialization complete.'
        else
          echo 'Data already initialized.'
        fi"  

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app/backend
      - data-volume:/app/backend/data
    env_file:
      - ./backend/.env  # Use backend's env file
    depends_on:
      - data-loader 

volumes:
  data-volume: